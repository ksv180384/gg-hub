services:
    # nginx
    gg-nginx:
        container_name: gg-nginx-container
        image: nginx:stable-alpine
        ports:
            - "${NGINX_TO_PORT}:${NGINX_FROM_PORT}"
            - "${NGINX_TO_PORT_SSL}:${NGINX_FROM_PORT_SSL}"
        volumes:
            - ./backend:/var/www/gg
            - ./_docker/nginx/${NGINX_CONFIG}:/etc/nginx/conf.d/default.conf
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        depends_on:
            - gg-php_8.2
            - gg-mariadb
        networks:
            - gg

    # Сервис для Node.js с Vue 3 (фронтенд)
    gg-frontend:
        container_name: gg_frontend
        build:
            context: .
            dockerfile: ./_docker/frontend/node.dockerfile
            args:
                NODE_ENV: ${NODE_ENV:-production}
        volumes:
            - ./frontend:/gg
        ports:
            - "3008:3008"
        networks:
            - gg
    #php
    gg-php_8.2:
        container_name: gg-php-8-container
        build:
            context: .
            dockerfile: ./_docker/php/php.dockerfile
        volumes:
            - ./backend/:/var/www/gg
            - ./_docker/php/php.ini:/usr/local/etc/php/php.ini
        #    command: sh -c "php artisan inertia:start-ssr & php-fpm"
#        command: php-fpm
        command: >
            sh -c "sleep 10 && php artisan queue:work & php-fpm"
        #        environment:
        #            APP_ENV: dev
        depends_on:
            - gg-mariadb
        ports:
            - "3004:3004"
        networks:
            - gg

    #mysql
    gg-mariadb:
        container_name: gg-mariadb-container
        image: mariadb:latest
        ports:
            - "${DB_TO_PORT}:${DB_FROM_PORT}"
        volumes:
            - ./_docker/mysql:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always
        environment:
            MYSQL_DATABASE: gg
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        networks:
            - gg

    gg-redis:
        image: redis:alpine
        ports:
            - "6379:6379"
        networks:
            - gg

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        links:
            - gg-mariadb:db
        restart: always
        ports:
            - "3002:80"
        environment:
            UPLOAD_LIMIT: 500M
            PMA_ARBITRARY: 1
        networks:
            - gg

    socket-server-nodejs:
        container_name: socket_server
        build:
            context: .
            dockerfile: ./_docker/socket_server/socket_server.dockerfile
        restart: unless-stopped
        volumes:
            - ./socket_server:/var/www/socket_server
        #      - ./_docker/nodejs/entrypoint.sh:/var/www/chat-vue.local/entrypoint.sh
        command: npm run dev
        ports:
            - "3007:3007"
        networks:
            - gg

    certbot:
        image: certbot/certbot
        container_name: certbot
        #    ports:
        #      - "6000:80"
        #    env_file:
        #      - .env
        # и снова мониторуем директорию nginx
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        #    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${DOMAIN_EMAIL} -d gg-hub.ru -d admin.gg-hub.ru -d tl.gg-hub.ru --agree-tos
        #    command: certonly --manual --preferred-challenges=dns --email ${DOMAIN_EMAIL} --server https://acme-v02.api.letsencrypt.org/directory --agree-tos -d ${DOMAIN_URL} -d *.${DOMAIN_URL}
        depends_on:
            - gg-nginx
        networks:
            - gg

networks:
    gg:
